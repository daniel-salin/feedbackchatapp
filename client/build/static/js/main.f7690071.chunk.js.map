{"version":3,"sources":["components/Student.js","components/Timer.js","components/Teacher.js","components/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["Student","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSlider","e","sliderValue","target","value","user","uid","socket","id","emit","enterRoom","preventDefault","roomInput","roomInputValue","current","setState","currentRoom","React","createRef","state","react_default","a","createElement","onSubmit","ref","type","className","style","background","color","padding","margin","onChange","max","min","Component","Timer","time","isOn","start","dataOverTime","startTimer","bind","assertThisInitialized","stopTimer","resetTimer","_this2","Date","now","timer","setInterval","checkValue","concat","toConsumableArray","x","Math","floor","y","currentAverageScore","clearInterval","onClick","stop","resume","reset","map","data","Teacher","addRoom","rooms","createRoom","key","random","room","studentInput","on","currentRoomStatus","console","log","numberOfUsers","filter","role","length","scoreArray","parseInt","totalScore","reduce","accumulator","currentValue","averageScore","_this3","listStyleType","react_router_dom","components_Timer","startLecture","LandingPage","href","App","getUserHandler","io","connect","to","react_router","path","exact","render","Student_Student","Teacher_Teacher","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f7690071.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class Student extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.roomInputValue = React.createRef();\r\n    this.state = {\r\n      currentRoom: null\r\n    }\r\n  }\r\n\r\n  handleSlider = e => {\r\n    const sliderValue = e.target.value;\r\n    const user = {\r\n      uid: this.props.socket.id,\r\n      value: sliderValue\r\n    };\r\n    this.props.socket.emit(\"slider-value\", user);\r\n  };\r\n\r\n  enterRoom = e => {\r\n    e.preventDefault();\r\n    const roomInput = this.roomInputValue.current.value;\r\n    this.props.socket.emit(\"enterRoom\", roomInput, false);\r\n    this.setState({\r\n      currentRoom: roomInput\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Student</h2>\r\n        <form onSubmit={this.enterRoom}>\r\n          <input ref={this.roomInputValue} type=\"text\" />\r\n          <button>Join Room</button>\r\n        </form>\r\n        {(this.state.currentRoom !== null) \r\n          ? (\r\n            <div className=\"current-room-container\" style={{background:\"black\",color:\"white\",padding:\"10px\",margin:\"10px\"}}>\r\n              <h2>Welcome to room {this.state.currentRoom}</h2>\r\n              <form>\r\n                <input onChange={this.handleSlider} type=\"range\" max=\"10\" min=\"0\" />\r\n              </form>\r\n            </div>)\r\n          : \"\"}\r\n        <div id=\"Output\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ms from \"pretty-ms\";\r\n\r\nclass Timer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: 0,\r\n      isOn: false,\r\n      start: 0,\r\n      dataOverTime:[]\r\n    };\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.stopTimer = this.stopTimer.bind(this);\r\n    this.resetTimer = this.resetTimer.bind(this);\r\n  }\r\n  startTimer() {\r\n    this.setState({\r\n      isOn: true,\r\n      time: this.state.time,\r\n      start: Date.now() - this.state.time\r\n    });\r\n    this.timer = setInterval(\r\n      () =>\r\n        this.setState({\r\n          time: Date.now() - this.state.start\r\n        }),\r\n      1\r\n    );\r\n    this.checkValue = setInterval(\r\n      () =>\r\n      this.setState({\r\n        dataOverTime: [...this.state.dataOverTime, {\r\n          x: Math.floor((this.state.time)/1000),\r\n          y: this.props.currentAverageScore\r\n        }]  \r\n      }),\r\n      1000\r\n    );\r\n\r\n  }\r\n  stopTimer() {\r\n    this.setState({ isOn: false });\r\n    clearInterval(this.timer);\r\n    clearInterval(this.checkValue);\r\n  }\r\n  resetTimer() {\r\n    this.setState({ time: 0, isOn: false });\r\n  }\r\n  render() {\r\n    let start =\r\n      this.state.time == 0 ? (\r\n        <button onClick={this.startTimer}>start</button>\r\n      ) : null;\r\n    let stop =\r\n      this.state.time == 0 || !this.state.isOn ? null : (\r\n        <button onClick={this.stopTimer}>stop</button>\r\n      );\r\n    let resume =\r\n      this.state.time == 0 || this.state.isOn ? null : (\r\n        <button onClick={this.startTimer}>resume</button>\r\n      );\r\n    let reset =\r\n      this.state.time == 0 || this.state.isOn ? null : (\r\n        <button onClick={this.resetTimer}>reset</button>\r\n      );\r\n    return (\r\n      <div>\r\n        {this.props.currentAverageScore !== null ? <h3>{this.props.currentAverageScore}</h3> : \"\" }\r\n        <h3>timer: ms({this.state.time})</h3>\r\n        {start}\r\n        {resume}\r\n        {stop}\r\n        {reset}\r\n        <ul>\r\n          {this.state.dataOverTime.map(data => {return <li>y:{data.y}, x:{data.x}</li>})}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport Timer from \"./Timer\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nexport default class Teacher extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      rooms: [],\r\n      currentRoom: null,\r\n      currentRoomStatus: [],\r\n      averageScore: null\r\n    };\r\n  }\r\n\r\n  addRoom = data => {\r\n    this.setState({\r\n      rooms: [...this.state.rooms, data]\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.props.socket.on(\"createdRoom\", data => {\r\n      this.setState({\r\n        rooms: [...this.state.rooms, data]\r\n      });\r\n    });\r\n  }\r\n\r\n  createRoom = () => {\r\n    let key = Math.floor(Math.random() * 1000);\r\n    this.props.socket.emit(\"createRoom\", key);\r\n  };\r\n\r\n  enterRoom = room => {\r\n    this.props.socket.emit(\"enterRoom\", room, true);\r\n    this.setState({\r\n      currentRoom: room\r\n    });\r\n  };\r\n\r\n  studentInput = () => {\r\n    this.props.socket.emit(\"getRoomSnapshot\", this.state.currentRoom);\r\n    this.props.socket.on(\"usersInRoom\", data => {\r\n      this.setState({\r\n        currentRoomStatus: data\r\n      });\r\n      console.log(this.state.currentRoomStatus);\r\n      const numberOfUsers = this.state.currentRoomStatus.filter(\r\n        user => user.role === \"student\"\r\n      ).length;\r\n      const filterUsersArray = this.state.currentRoomStatus.filter(\r\n        user => user.role === \"student\"\r\n      );\r\n      const scoreArray = filterUsersArray.map(user => {\r\n        return parseInt(user.value);\r\n      });\r\n      const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n      const totalScore = scoreArray.reduce(reducer);\r\n      const averageScore = totalScore / numberOfUsers;\r\n      console.log(\"score array: \", scoreArray);\r\n      console.log(\"total score: \", totalScore);\r\n      console.log(\"number of users: \", numberOfUsers);\r\n      console.log(\"average score: \", averageScore);\r\n      this.setState({\r\n        averageScore: averageScore\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Teacher</h2>\r\n        {this.state.currentRoom !== null ? (\r\n          <div\r\n            className=\"current-room-container\"\r\n            style={{\r\n              background: \"black\",\r\n              color: \"white\",\r\n              padding: \"10px\",\r\n              margin: \"10px\"\r\n            }}\r\n          >\r\n            <h3>Room: {this.state.currentRoom}</h3>\r\n            <p>Average Score:{this.state.averageScore}</p>\r\n            <button onClick={this.studentInput}>Get current score</button>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <button onClick={this.createRoom}>Create Room</button>\r\n        <ul style={{ listStyleType: \"none\" }}>\r\n          {this.state.rooms.map(room => {\r\n            return (\r\n              <Router>\r\n                <button\r\n                  key={room}\r\n                  value={room}\r\n                  onClick={() => {\r\n                    this.enterRoom(room);\r\n                  }}\r\n                >\r\n                  Room ID: {room}\r\n                </button>\r\n              </Router>\r\n            );\r\n          })}\r\n        </ul>\r\n        <Timer currentAverageScore={this.state.averageScore} />\r\n        <div>\r\n          <button onClick={this.studentInput}>Get user info</button>\r\n        </div>\r\n        <button onClick={this.startLecture}>Start counter!</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function LandingPage(props) {\r\n  return (\r\n    <div>\r\n      <h2>Home</h2>\r\n      <a href=\"/\">\r\n        <button>Admin</button>\r\n      </a>\r\n      <a href=\"\">\r\n        <button>Users</button>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\nimport \"./App.css\";\r\nimport Student from \"./components/Student\";\r\nimport Teacher from \"./components/Teacher\";\r\nimport LandingPage from \"./components/LandingPage\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.socket = io.connect(\"https://localhost:5000\");\r\n  }\r\n\r\n  getUserHandler = e => {\r\n    this.socket.emit(\"get-users\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Feedback App</h1>\r\n        <Router>\r\n          <div>\r\n            <button>\r\n              <Link to=\"/teacher/\">Teacher</Link>\r\n            </button>\r\n            <button>\r\n              <Link to=\"/student/\">Student</Link>\r\n            </button>\r\n\r\n            <div style={{ background: \"white\", padding: \"10px\" }}>\r\n              <Route\r\n                path=\"/\"\r\n                exact\r\n                render={() => <LandingPage socket={this.socket} />}\r\n              />\r\n              <Route\r\n                path=\"/student/\"\r\n                render={() => <Student socket={this.socket} />}\r\n              />\r\n              <Route\r\n                path=\"/teacher/\"\r\n                render={() => <Teacher socket={this.socket} />}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Router>\r\n        <button onClick={this.getUserHandler}>Get active users</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}